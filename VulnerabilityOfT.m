function [ Vc, Vk ] = VulnerabilityOfT( t1, t2, t3, syst, sysk)
% Gets the vulnerability of the transformed system.
%
% @param t1, t2, t3 {float} The parameters representing transformation T
% @param syst {ss} The state-space representation of the plant
% @param sysk {ss} The state-space representation of the original 
%   controller to be transformed by T
%
% @returns Vc {float} The maximum vulnerability seen by any link in the 
%   combined system.
% @returns Vk {float} The maximum vulnerability seen by links from the 
%   controller portion of the combined system.
%
% @author Nathan Woodbury

[An, Bn] = GetTransformedSystem(t1, t2, t3, sysk.A, sysk.B);
Cn = sysk.C;

% Determine if the transformed system is stable. If not, set vulnerability
% to infinity.
if ~all(eig(An) < 0)            
    Vc = Inf;
    Vk = Inf;
    return;
end

% Get the DSFs of the plant and controller
[Qn, Pn] = checkQP(An, Bn, Cn);
[Qt, Pt] = checkQP(syst.A, syst.B, syst.C);

% Combine the systems and find the vulnerabilities
Qc = [Qn Pn ; Pt Qt];
allvs = get_vuln_mat(Qc);
Vc = max(max(allvs));
Vk = max(max(allvs(1:size(Qn,1),:)));

end

